@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {        
        var name = UserManager.GetUserAsync(User).Result.Name.Split(" ");
        <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @name[0]!</a>
        </li>

        if (User.IsInRole("Admin") || User.IsInRole("Teacher"))
        {       
            <li class="nav-item">
                <a class="nav-link" asp-area="Identity" asp-page="/Account/Register">Register a new user</a>
            </li>
        }

     
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link logout-button">Logout</button>
            </form>
        </li>
    }
    else
    {

        <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>

    }
</ul>